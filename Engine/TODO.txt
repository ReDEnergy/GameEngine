[EDITOR][GAMEPLAY]
1. Add support for auto-resize buffers based on window size
	- when the window is resized a event is sent to the Game World
	- the game decides how to use this information

[DEBUG]
1. Create a generic DebugViewPanel
	- add support for object registering
		- objects decides what when and where to bind information
		- channels based approach for textures binding

[EDITOR][DEBUG][GAMEPLAY]
1. Add support for multiple cameras
	- manager for cameras
	- key bindings for activating each cameras
		- something like CTRL + SHIFT + CAMERA_NUMBER (0 - 9)
		- 10 cameras should be more than enough

[EDITOR][GAMEPLAY]
1. Implement an object picking mechanism 
	- based on unique color for perfect selection

[ENGINE][GENERAL]
1. Rendering features and techniques handled by the engine not the game
	- lighting, shadows, ambient occlusion
	- forward/deferred rendering
	- automatic scene management/culling
	- game loop must be used only for gameplay logic and mechanics

2. Create the [GAME EDITOR]
	- use QT
	
3. Improve game menu with additional menu types
	- sliders/drop-downs/etc
	- see the Menu.xml file

[ENGINE][PHYSICS]
1. Swap Havok Physics with Nvidia Physics

[ENGINE][BUILDING]
1. Add support for x64 builds

2. Add configuration for building the engine with Physics/No Physics support

[ENGINE][BUILDING][GAMEPLAY]
1. Solve Release build crashes
	- memory leaks
	- incorrect access of memory from Game to Engine library
		- static objects
		- singleton objects

[ENGINE][RENDERING]
1. Add support for simple materials

2. Implement bump mapping technique

3. Fix SSAO implementation
	- quality scales down with higher resolutions (why?)

4. Fix game menu scaling
	- size should not depend on the window resolution and aspect ratio


